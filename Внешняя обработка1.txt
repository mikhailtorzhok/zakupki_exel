
&НаКлиенте
Процедура Рассчитать(Команда)
	Сообщить("Привет, мир");
	МассивКорреспондентов = Новый Массив;
	МассивКорреспондентов = ЗапроситьСписокКонтрагентовНаСервере();
	//тзВСтроке = ЗапроситьСписокКонтрагентовНаСервере();
	Сообщить("Возврат Корреспондентов");
	//тз = ЗначениеИзСтрокиВнутр(тзВСтроке);
	//Сообщить(СтрДлина(тзВСтроке));
	//Сообщить ("Успешное восстановление таблицы из строки");	
	//Сообщить(МассивКорреспондентов[0]);
	i=0;
	Для Каждого Корреспондент Из МассивКорреспондентов Цикл
        Сообщить(Корреспондент);
		сообщить(Корреспондент.количество());
		//НапечататьТаблицуКорреспондентов(Корреспондент);	
		Сообщить("Корреспондент.Ссылка" + " = " + Корреспондент.Ссылка);
		Сообщить("Корреспондент.ИНН" + " = " + Корреспондент.ИНН);
		Сообщить("Корреспондент.ФизЛицо" + " = " + Корреспондент.ФизЛицо);
		Сообщить("Корреспондент.ВидКорреспондента" + " = " + Корреспондент.ВидКорреспондента);
		Сообщить("Корреспондент.ПолноеНаименование" + " = " + Корреспондент.ПолноеНаименование);
        Сообщить("Корреспондент.КПП" + " = " + Корреспондент.КПП);
        Сообщить("Корреспондент.КодПоОКПО" + " = " + Корреспондент.КодПоОКПО);
		Сообщить("Корреспондент.ГруппаДоступа" + " = " + Корреспондент.ГруппаДоступа);
		Сообщить("Корреспондент.Комментарий" + " = " + Корреспондент.Комментарий);
		//Сообщить("Корреспондент.Регион" + " = " + Корреспондент.Регион);
		МассивКонтактнаяИнформация = ЗапроситьКонтактнуюИнформациюПоКорреспонденту(Корреспондент.Ссылка); 
		Сообщить("Корреспондент.МассивКонтактнаяИнформация" + " = " + МассивКонтактнаяИнформация);
		Для Каждого Элемент Из МассивКонтактнаяИнформация Цикл
			Сообщить("ЭлементКоличество" + " = " + Элемент.Количество());
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.Тип);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.Вид);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.Представление);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.ЗначенияПолей);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.Страна);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.Регион);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.Город);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.ДоменноеИмяСервера);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.НомерТелефона);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.НомерТелефонаБезКодов);
			//Сообщить("МассивКонтактнаяИнформацияЭлемент" + " = " + Элемент.АдресЭП);
			Если ТипЗнч(Элемент) = Тип("Структура") Тогда
				Для Каждого ЭлементВ из Элемент Цикл
					Сообщить("ЭлементТип" + " = " + Элемент.Тип);
					Сообщить("ЭлементВид" + " = " + Элемент.Вид);
					Сообщить("ЭлементПредставление" + " = " + Элемент.Представление);
					Сообщить("ЭлементЗначенияПолей" + " = " + Элемент.ЗначенияПолей);
					Сообщить("ЭлементСтрана" + " = " + Элемент.Страна);
					Сообщить("ЭлементРегион" + " = " + Элемент.Регион);
					Сообщить("ЭлементГород" + " = " + Элемент.Город);
					Сообщить("ЭлементДоменноеИмяСервера" + " = " + Элемент.ДоменноеИмяСервера);
					Сообщить("ЭлементНомерТелефона" + " = " + Элемент.НомерТелефона);
					Сообщить("ЭлементНомерТелефонаБезКодов" + " = " + Элемент.НомерТелефонаБезКодов);
					Сообщить("ЭлементАдресЭП" + " = " + Элемент.АдресЭП);
				КонецЦикла;	
			Иначе
				Сообщить("ЭлементНеЯвляетсяСтруктурой" + " = " + Элемент);
			КонецЕсли;	
		КонецЦикла;	
		i=i+1;
		Если i>=3 Тогда
            Прервать;
        КонецЕсли;
	КонецЦикла;
	ЗаписатьДанныеВФайлCSV(Команда, МассивКорреспондентов)

	
КонецПроцедуры

 &НаСервере
Функция ЗапроситьКонтактнуюИнформациюПоКорреспонденту(ИскомыйКорреспондент)
Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("Наименование", ИскомыйКорреспондент);
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   КорреспондентыКонтактнаяИнформация.Тип,
	|   КорреспондентыКонтактнаяИнформация.Вид,
	|   КорреспондентыКонтактнаяИнформация.Представление,
	|   КорреспондентыКонтактнаяИнформация.ЗначенияПолей,
	|   КорреспондентыКонтактнаяИнформация.Страна,
	|   КорреспондентыКонтактнаяИнформация.Регион,
	|   КорреспондентыКонтактнаяИнформация.Город,
	|   КорреспондентыКонтактнаяИнформация.ДоменноеИмяСервера,
	|   КорреспондентыКонтактнаяИнформация.НомерТелефона,
	|   КорреспондентыКонтактнаяИнформация.НомерТелефонаБезКодов,
	|   КорреспондентыКонтактнаяИнформация.АдресЭП
    |ИЗ
    |   Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
    |ГДЕ
    //|   КорреспондентыКонтактнаяИнформация.Ссылка.Наименование ПОДОБНО &Наименование";
	| КорреспондентыКонтактнаяИнформация.Ссылка= &Наименование";
    Результат=Запрос.Выполнить();
    //ТабКонтактнаяИнформация=Результат.Выбрать(); 
	ТабКонтактнаяИнформация = Результат.Выгрузить();
	МассивКонтактнаяИнформация = Новый Массив;
	МассивКонтактнаяИнформация = ТаблицаЗначенийВМассив1(ТабКонтактнаяИнформация);
Возврат(МассивКонтактнаяИнформация);
КонецФункции





 &НаСервере
Функция ЗапроситьСписокКонтрагентовНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	Корреспонденты.Ссылка КАК Ссылка,
		|	Корреспонденты.ИНН КАК ИНН,
		|	Корреспонденты.ФизЛицо КАК ФизЛицо,
		|	Корреспонденты.ВидКорреспондента КАК ВидКорреспондента,
		|	Корреспонденты.ПолноеНаименование КАК ПолноеНаименование,
		|	Корреспонденты.КПП КАК КПП,
		|	Корреспонденты.КодПоОКПО КАК КодПоОКПО,	
		|	Корреспонденты.ГруппаДоступа КАК ГруппаДоступа,
		|	Корреспонденты.Комментарий КАК Комментарий
		//|	Справочник.Корреспонденты.КонтактнаяИнформация.Регион КАК Регион
		|ИЗ
		|	Справочник.Корреспонденты КАК Корреспонденты";
	РезультатЗапроса = Запрос.Выполнить();
	ТабКорреспондентов = РезультатЗапроса.Выгрузить();	
	//тзВСтроке = ЗначениеВСтрокуВнутр(ТабКорреспондентов); 	
	Сообщить("Создание таблицы корреспонденты завершено");	
	//Возврат(тзВСтроке);
	
	МассивКорреспондентов = Новый Массив;
	//МассивКонтактнаяИнформация = Новый Массив;
	//МассивКонтактнаяИнформация = ТаблицаЗначенийВМассив1(Корреспонденты.КонтактнаяИнформация.НомерТелефона);

	МассивКорреспондентов = ТаблицаЗначенийВМассив1(ТабКорреспондентов);	
	Возврат(МассивКорреспондентов);	
КонецФункции


&НаКлиенте
Процедура ЗаписатьCSV(ТекстФайла, ИмяФайла)
		
	КодировкаФайла 	= КодировкаТекста.Системная;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(ИмяФайла, КодировкаФайла);           
	ТекстовыйФайлЗапись.ЗаписатьСтроку(ТекстФайла);
	ТекстовыйФайлЗапись.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанныеВФайлCSV(Команда, ДанныеДляЗаписиМассив)
	ФайлЗаписиДанных = "d://Корреспонденты.csv";
	Если Не ЗначениеЗаполнено(ФайлЗаписиДанных) Тогда
		Возврат;
	КонецЕсли;	
	
	ТекстФайлаCSV = "";
	СимволРазделителя = ",";
	
	//Если хотим добавить строку заголовков, то добавим строку
	ТекстФайлаCSV = "ПолноеНаименование"+ СимволРазделителя + "Ссылка"+ СимволРазделителя + 
	"ВидКорреспондента"+ СимволРазделителя + "ФизЛицо"+ СимволРазделителя +
	"ИНН"+ СимволРазделителя + "КПП"+ СимволРазделителя +
	"КодПоОКПО"+ СимволРазделителя + "ГруппаДоступа"+ СимволРазделителя +
	"Комментарий" + Символы.ПС;
	
	Для Каждого ТекСтрока Из ДанныеДляЗаписиМассив Цикл
		ТекстФайлаCSV = ТекстФайлаCSV + ТекСтрока.ПолноеНаименование + СимволРазделителя + 
										ТекСтрока.Ссылка + СимволРазделителя + 
										ТекСтрока.ВидКорреспондента + СимволРазделителя + 
										ТекСтрока.ФизЛицо + СимволРазделителя +
										ТекСтрока.ИНН + СимволРазделителя +
										ТекСтрока.КПП + СимволРазделителя +
										ТекСтрока.КодПоОКПО + СимволРазделителя +
										ТекСтрока.ГруппаДоступа + СимволРазделителя +
										ТекСтрока.Комментарий + СимволРазделителя +
										Символы.ПС;
										//ТекСтрока.Регион + Символы.ПС;
										//Символы.ПС;
										//Строка(ТекСтрока.ДатаРождения) + Символы.ПС;
	КонецЦикла;
	
	//ТекстФайлаCSV = Лев(ТекстФайлаCSV, СтрДлина(ТекстФайлаCSV) - 1);
	
	Попытка
		ЗаписатьCSV(ТекстФайлаCSV, ФайлЗаписиДанных)
	Исключение
	КонецПопытки;
	
КонецПроцедуры




&НаСервере
Функция ТаблицаЗначенийВМассив1(ТаблицаЗначений) 
    
    Массив = Новый Массив();
    СтруктураСтрокой = "";
    НужнаЗапятая = Ложь;
    Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
        Если НужнаЗапятая Тогда
            СтруктураСтрокой = СтруктураСтрокой + ",";
        КонецЕсли;
        СтруктураСтрокой = СтруктураСтрокой + Колонка.Имя;
        НужнаЗапятая = Истина;
    КонецЦикла;
    Для Каждого Строка Из ТаблицаЗначений Цикл
        НоваяСтрока = Новый Структура(СтруктураСтрокой);
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
        Массив.Добавить(НоваяСтрока);
    КонецЦикла;
    Возврат Массив;

КонецФункции


	
			 


